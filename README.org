* What is MobileOrg?
  [[https://api.travis-ci.org/MobileOrg/mobileorg.png]] [[https://gitter.im/MobileOrg/Lobby][https://img.shields.io/gitter/room/nwjs/nw.js.svg]]

  MobileOrg is a FREE (open-source) iPhone and iPod Touch application
  for storing, searching, viewing and editing your Org mode files.

  MobileOrg works offline. Although you may not always be online, you
  can always access your data. You can even capture notes while offline
  and sync the next time you have connectivity.

* MobileOrg feature overview
 - Support for Dropbox or WebDAV as a transfer mechanism
 - Org files are stored offline and available anywhere
 - Complete editing support, including editable headings, body text, todo
   state, tags and priority.
 - Note-taking facility built in, including offline support
 - Full-text search, or search by keyword (TODO, DONE, WAITING) or by tag
   (errand, office)
 - Mark nodes as done, or flag them with an optional note for reference
   later
 - Document view of your outlines, for reading document-style Org files
   with long body text
 - Powerful support for linking between Org files

* Org mode integration
  Org mode has built-in support for MobileOrg (or any other mobile
  client that may come along in the future and use the same asymmetric
  synchronization approach).

  - A simple org-mobile-push will stage your complete set of Org-files for
    MobileOrg to pick them up. The result includes:
    + An Org file representing all of your custom agenda views
    + Automatic checksum file construction to speed up sync
    + Automatic index.org file generation with links to all of your Org files
  - A powerful org-mobile-pull command, which will integrate changes
    youâ€™ve made on the go into a local Org file
* Contributing
  There are a few minor things we request in order to make it easier
  to accept contributions.
  
  Of course, the main thing is to simply feel free to contribute any
  and all code. It's much appreciated!

** Setting up your environment

  For the usage of the Dropbox API an application key is
  necessary. You can obtain it [[https://www.dropbox.com/developers/apps/create][from Dropbox.]] It is important to apply
  for keys of the *App Folder* type not the *Full Dropbox* type. 

  Find the file AppKey.plist in the project and obtain the information
  you've received from Dropbox there.

  MobileOrg uses CocoaPods. Install CocoaPods by following the
  instructions [[https://cocoapods.org][from here.]]
  Install the needed pods by running
  #+BEGIN_SRC shell
  pod install
  #+END_SRC  
  in your shell.
  
  Next open the MobileOrg.xcworkspace file *not* the MobileOrg.xcodeproj file.
  This is the current way Xcode deals with user specific files that hold settings
  by default. For a lot of background info, see [[https://neurocline.github.io/dev/2016/04/16/xcode-xcworkspace-and-xcodeproj.html][Xcode - xcworkspace and xcodeproj]]

** Pull Requests
   Pull requests for bug fixes, features or anything else are gladly
   accepted. Since this is github we follow the fork/pull
   collaboration style. If you are planning to contribute you should
   have a fork of the mobileorg repository and issue pull requests
   from there.

   It is expected that the code reviewer will merge your pull request. If you
   wish to open a pull request for a proof of concept or feedback on an idea,
   please clearly indicate this in the description or title.
** git flow branching model
   To the extent possible the MobileOrg repo follows the [[http://nvie.com/posts/a-successful-git-branching-model/][Git Flow]]
   branching model. How this affects contributing is that *all new
   work should be based off the develop* branch and be named either
   *feature/your-new-feature*, *hotfix/some-bug-fix* or similar. See
   the previous link for more information. This will make it much
   easier to merge your work.

   There is a [[https://github.com/nvie/gitflow][git extension]] if you're interested in learning a new
   command for this workflow, but it isn't required. You can just as
   easily manually do:
   #+BEGIN_SRC 
    git checkout -b feature/new-hotness
   #+END_SRC

   If you like to work further with your fork you should incorporate
   your changes into the develop-branch not by merging your branch
   into it, but by syncing your fork with the main repository.

   A description how to do this is available at [[https://help.github.com/articles/syncing-a-fork/][GitHub Help]].

** bug tracker
   [[https://github.com/MobileOrg/mobileorg/issues][github issues]]
** contact
   - Web:  http://mobileorg.github.io
   - IRC: #mobileorg on freenode
   - Gitter: https://gitter.im/MobileOrg/Lobby
* Changelog
  See: https://github.com/MobileOrg/mobileorg.github.io/issues/1
* Credits
  MobileOrg is thanks to the following:
  - Richard Moreland
  - Carsten Dominik
  - Greg Newman
  - Christophe Bataillon
  - Joseph Wain of glyphish.com
  - Sean Escriva
  - Alex Rodich
  - Russell McClellan
  - Mario Martelli
* Support
  MobileOrg will always stay free in the app store, but the Apple
  Developer program costs money. Currently I pay $99 a year to
  maintain this and keep it in the app store. If you'd like to donate
  toward that using [[https://www.gittip.com/webframp/][gittip]] you can.
  
  [[https://www.gittip.com/webframp/][file:https://rawgithub.com/twolfson/gittip-badge/0.1.0/dist/gittip.png]]

  You support MobileOrg just by using it, thanks for your continued interest.
* License
    MobileOrg is distributed under the GNU Public License version 2.
    See LICENSE.txt for more info.


